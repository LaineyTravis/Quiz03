def dot(vector01, vector02):
  """
  The function will take in two vector arguments and take the sum of each corresponding argument's component's products, before returning the scalar answer.
  """
  if len(vector01) != len(vector02):
    print("invalid input")
#Since a dot product can only occur between two vectors of the same length. If the vector arguments have differing lengths then the code will print an "invalid input" message. 
  else:
    return sum(vector01[i] * vector02[i] for i in range(len(vector01)))
#This multiplies each corresponding component of both vector agruments together and then adds that product to the other corresponding products. 
#i.e. vector01 i component will multiply to vector02 i component which will be added to the product of vector01 j component * vector02 j component which will be added to the product of vector01 k component * vector02 k component until all corresponding vector components have been multiplied and then added together. 

#Finally, the function will return a scalar as the answer.



#These are test variables for function

testvector01A = [2, 4, 6]
testvector01B = [1, 7, 8, 9]
testvector01C = "Squirrel Bubbles"

testvector02A = [7, 2, 5]
testvector02B = [2, 4, 33]
testvector02C = [7, 12, 4]

print (dot(testvector01A, testvector02A))
#print (dot(testvector01B, testvector02B))
#print (dot(testvector01C, testvector02C))
