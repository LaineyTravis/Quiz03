#I wanted to use the infinity norm code from the previous problem and then add on to it to create the normalized vector.

def infNorm(vector):
    max_value = vector[0]
    for i in vector:
        if max_value < abs(i):
          max_value = abs(i)
    return max_value


def normalize(vector):
  """
  This function will take in a vector agrument, and will divide each of the argument's components by that maximum absolute value component before returning the updated vector. 
  """
#I also wanted to combine elements from the scalarVecMulti function from Problem 3 for this normalize function.
  norm = infNorm(vector)
     #First the function takes each of the vector argument's components and finds the maximum absolute value of those components using the above infNorm function.
  new_vector = []
  for i in vector:
      new_vector.append((1.0/norm)*i)
      #Next it takes the inverse of that maximum absolute value and then multiplies it to each of components of the vector argument.
  return new_vector
  #Finally, the updated components are appended to new_vector to create the normalized vector with respect to the infinity norm.


#Test variables for this function


testvector01 = [5, -30, 3, -10]
testvector02 = -24
testvector03 = "Squirrel Bubbles" 


print(normalize(testvector01))
#print(normalize(testvector02))
#print(normalize(testvector03))
